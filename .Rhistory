pythag <- function(a,b){
if(is.numeric(a) == FALSE | is.numeric(b) == FALSE){return('I need numeric values to make this work')}
if(a > 0 & b > 0){return(sqrt((a^2)+(b^2)))}
else{return('Values Need to be Positive')}
}
pythag <- function(a,b){
if(is.numeric(a) == FALSE | is.numeric(b) == FALSE){return('I need numeric values to make this work')}
if(a > 0 & b > 0){return(sqrt((a^2)+(b^2)))}
else{return('Values Need to be Positive')}
}
a=2
b=3
pythag
pythag(4,5)
pythag(-4,5)
pythag(4,5)
## generate data
set.seed(1234)     # for reproducibility
x <- rnorm(10)     # standard normal
x[1] <- x[1] * 10  # introduce outlier
## Trim data
x
Trim(x, trim=0.1)
## check function
s <- sample(10:20)
s.tr <- Trim(s, trim = 2)
install.packages("trimr")
library(trimr)
s <- sample(10:20)
s.tr <- Trim(s, trim = 2)
s.tr <- trim(s, trim = 2)
data=c(1:10)
# display
print(data)
# calculate trimmed mean with trim of 10%
print(mean(data,trim=0.10))
trimming <- function(x){
if(length(data)>2){return(print(mean(data,trim=0.10)))}
else{return("length of data should be bigger than two")}
}
data=c(1:10)
trimming(data)
data=c(1:2)
trimming(data)
data=c(1:2)
trimming(data)
data=c(1:46)
trimming(data)
knitr::opts_chunk$set(echo = TRUE)
pythag <- function(a,b){
if(is.numeric(a) == FALSE | is.numeric(b) == FALSE){return('I need numeric values to make this work')}
if(a > 0 & b > 0){return(sqrt((a^2)+(b^2)))}
else{return('Values Need to be Positive')}
}
pythag(4,5)
install.packages("trimr")
library(trimr)
trimming <- function(x){
if(length(data)>2){return(print(mean(data,trim=0.10)))}
else{return("length of data should be bigger than two")}
}
# Example
data=c(1:46)
trimming(data)
install.packages("trimr")
knitr::opts_chunk$set(echo = TRUE)
library(trimr)
trimming <- function(x){
if(length(data)>2){return(print(mean(data,trim=0.10)))}
else{return("length of data should be bigger than two")}
}
# Example
data=c(1:46)
trimming(data)
ls -a
ls -a.
git init
devtools::install_github()
install.packages("devtools")
library(devtools)
devtools::install_github()
trmming(2:8)
IS-a
knitr::opts_chunk$set(echo = TRUE)
pythag <- function(a,b){
if(is.numeric(a) == FALSE | is.numeric(b) == FALSE){return('I need numeric values to make this work')}
if(a > 0 & b > 0){return(sqrt((a^2)+(b^2)))}
else{return('Values Need to be Positive')}
}
pythag(4,5)
library(trimr)
trimming <- function(x){
if(length(data)>2){return(print(mean(data,trim=0.10)))}
else{return("length of data should be bigger than two")}
}
# Example
data=c(1:46)
trimming(data)
